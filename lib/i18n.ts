export type Language = "en" | "es"

export const translations = {
  en: {
    // Authentication
    auth: {
      error: "Error",
      success: "Success",
      loginSuccess: "Logged in successfully",
      loginError: "Failed to login. Please check your credentials.",
      signupSuccess: "Account created successfully",
      signupError: "Failed to create account",
      networkError: "Network error. Please try again.",
    },
    // Login Screen
    login: {
      title: "Flutter Component Generator",
      subtitle: "Streamline your component documentation",
      welcomeBack: "Welcome back",
      signInPrompt: "Sign in to start creating component specifications",
      email: "Email",
      password: "Password",
      signIn: "Sign in",
      signingIn: "Signing in...",
      noAccount: "Don't have an account?",
      signUp: "Sign up",
      supabaseReady: "Ready for Supabase integration",
      authPrepared: "Authentication logic prepared in login-screen.tsx",
      whyUse: "Why use this tool?",
      feature1Title: "Multi-step Form Interface",
      feature1Desc: "Break down complex component specifications into manageable steps",
      feature2Title: "Design System Integration",
      feature2Desc: "Predefined tokens for colors, typography, and dimensions from your design system",
      feature3Title: "Live Markdown Preview",
      feature3Desc: "See your component specification generated in real-time as you fill the form",
      feature4Title: "Export & Auto-save",
      feature4Desc: "Export as markdown file and never lose your progress with auto-save",
      perfectFor: "Perfect for:",
      perfectForDesc:
        "Flutter developers, design system maintainers, and teams who want to standardize component documentation for AI-assisted development.",
      viewDocs: "View Documentation",
    },
    // Component Form
    form: {
      stepOf: "Step {current} of {total}",
      quickStart: "Quick Start",
      resetStep: "Reset Step",
      previous: "Previous",
      next: "Next",
      resetStepTitle: "Reset this step?",
      resetStepDesc: "This will clear all data for the current step. This action cannot be undone.",
      cancel: "Cancel",
      reset: "Reset",
    },
    // Steps
    steps: {
      basicInfo: "Basic Info",
      variantsStates: "Variants & States",
      designSpecs: "Design Specs",
      componentAPI: "Component API",
      behavior: "Behavior",
      implementation: "Implementation",
      review: "Review",
    },
    // Basic Info Step
    basicInfo: {
      componentName: "Component Name",
      componentNamePlaceholder: "e.g., TobatiPrimaryButton",
      componentNameHint: "Use PascalCase for component names",
      componentType: "Component Type",
      description: "Description",
      descriptionPlaceholder: "Brief description of what this component does and where it's used...",
      visualReference: "Visual Reference",
      visualReferencePlaceholder: "Describe the component layout, visual hierarchy, and key visual elements...",
      visualReferenceHint: "Provide Figma link or detailed description",
      required: "*",
    },
    // Variants & States Step
    variantsStates: {
      selectVariants: "Select all variants this component needs to support",
      quickStartNote: "Quick Start mode shows essential variants. Disable Quick Start to see all options.",
    },
    // Design Specs Step
    designSpecs: {
      colors: "Colors",
      background: "Background",
      text: "Text",
      border: "Border",
      icons: "Icons",
      selectColor: "Select color",
      typography: "Typography",
      primaryText: "Primary Text",
      secondaryText: "Secondary Text",
      labels: "Labels",
      selectStyle: "Select style",
      dimensions: "Dimensions & Spacing",
      padding: "Padding",
      borderRadius: "Border Radius",
      selectSize: "Select size",
    },
    // Component API Step
    componentAPI: {
      title: "Component Props/Parameters",
      description: "Define the component API using Dart syntax",
      tips: "Tips:",
      tip1: "Use required for mandatory parameters",
      tip2: "Add ? for nullable/optional parameters",
      tip3: "Provide default values where appropriate",
      tip4: "Use proper Dart typing for all parameters",
    },
    // Behavior Step
    behavior: {
      behaviorTitle: "Behavior & Interactions",
      behaviorPlaceholder:
        "Describe how the component behaves: tap/press actions, user input response, internal state, validation logic, keyboard interactions, gesture support...",
      responsiveTitle: "Responsive Behavior",
      responsivePlaceholder:
        "Does size adapt to screen size? Different layouts for breakpoints? Text overflow handling?",
      accessibilityTitle: "Accessibility Requirements",
    },
    // Implementation Step
    implementation: {
      fileLocation: "File Location",
      fileLocationPlaceholder: "lib/core/design_system/components/[category]/[component_name].dart",
      fileLocationHint: "Category: buttons, inputs, cards, navigation, overlays, feedback, etc.",
      needsProvider: "Needs Riverpod Provider?",
      providerStructure: "Provider Structure",
      providerStructurePlaceholder: "Describe the provider structure...",
      consumesProviders: "Consumes Existing Providers",
      consumesProvidersPlaceholder: "List providers this component consumes...",
      validationTitle: "Validation (if applicable)",
      validationRules: "Validation Rules",
      validationRulesPlaceholder: "e.g., Required, min length, email format...",
      validationTiming: "When Validation Occurs",
      validationTimingPlaceholder: "onChange, onBlur, onSubmit...",
      additionalNotes: "Additional Notes",
      additionalNotesPlaceholder: "Any additional context, edge cases, or special requirements...",
    },
    // Review Step
    review: {
      title: "Review Your Component",
      description: "Verify all specifications before exporting the markdown file",
      validationChecklist: "Validation Checklist",
      percentComplete: "% Complete",
      componentSummary: "Component Summary",
      componentName: "Component Name:",
      type: "Type:",
      variants: "Variants:",
      variantsSelected: "selected",
      fileLocation: "File Location:",
      notSet: "Not set",
      exportButton: "Export Markdown",
      completeStepsToExport: "Complete all steps to export",
      allStepsComplete: "All steps complete! Ready to export.",
      incompleteSteps: "Incomplete steps:",
    },
    // Markdown Preview
    preview: {
      title: "Markdown Preview",
      copy: "Copy",
      copied: "Copied",
      copyToClipboard: "Copy to clipboard",
      completeStepsToCopy: "Complete all steps to copy",
      completeStepsWarning: "Complete all required steps to enable copy and export",
      placeholder: "Fill out the form to see the markdown preview...",
    },
    // Signup Screen
    signup: {
      title: "Flutter Component Generator",
      subtitle: "Streamline your component documentation",
      createAccount: "Create your account",
      signupPrompt: "Start documenting your Flutter components today",
      name: "Full Name",
      namePlaceholder: "John Doe",
      email: "Email",
      password: "Password",
      passwordHint: "Must be at least 6 characters",
      confirmPassword: "Confirm Password",
      createAccountButton: "Create Account",
      creatingAccount: "Creating account...",
      haveAccount: "Already have an account?",
      signIn: "Sign in",
      passwordMismatch: "Passwords do not match",
      passwordTooShort: "Password must be at least 6 characters",
      supabaseReady: "Ready for Supabase integration",
      authPrepared: "Authentication logic prepared in signup-screen.tsx",
      getStarted: "Get started in minutes",
      benefit1Title: "Lightning Fast Setup",
      benefit1Desc: "Create your account in seconds and start documenting components immediately.",
      benefit2Title: "Team Collaboration",
      benefit2Desc: "Share and collaborate on component documentation with your team.",
      benefit3Title: "AI-Ready Documentation",
      benefit3Desc: "Generate markdown files optimized for AI-assisted Flutter development.",
      freeForever: "Built for Developers:",
      freeForeverDesc: "Streamline your workflow with intelligent templates and real-time markdown generation.",
    },
    // Documentation Page
    docs: {
      title: "Documentation",
      subtitle: "Learn how to use the Flutter Component Generator",
      backToHome: "Back to Home",
      gettingStarted: "Getting Started",
      gettingStartedDesc: "Learn the basics of creating component specifications",
      howToUse: "How to Use",
      step1Title: "1. Create an Account",
      step1Desc: "Sign up to save your work and access all features. Your progress is automatically saved as you work.",
      step2Title: "2. Fill the Multi-Step Form",
      step2Desc: "Our intuitive 7-step form guides you through documenting every aspect of your Flutter component. Each step focuses on a specific aspect of your component:",
      step2Item1Title: "Step 1: Basic Info",
      step2Item1Desc: "Define the foundation of your component. Enter the component name (e.g., TobatiPrimaryButton), select its type from predefined categories (Button, Input, Card, etc.), provide a clear description of what it does, and add visual references like Figma links or detailed layout descriptions.",
      step2Item2Title: "Step 2: Variants & States",
      step2Item2Desc: "Select all the variants your component needs to support. Choose from states like Default, Hover, Active, Disabled, Loading, Error, and Success. Use Quick Start mode to see only essential variants, or disable it to access the complete list of possible states.",
      step2Item3Title: "Step 3: Design Specs",
      step2Item3Desc: "Define the visual design of your component using design system tokens. Specify colors for background, text, borders, and icons. Choose typography styles for primary text, secondary text, and labels. Set dimensions including height, width, padding, margin, border radius, and icon sizes. Add animation details if needed.",
      step2Item4Title: "Step 4: Component API",
      step2Item4Desc: "Define the component's props and parameters using Dart syntax. Include type definitions, mark required parameters with 'required', use '?' for optional/nullable parameters, and provide default values where appropriate. This becomes the public interface of your component.",
      step2Item5Title: "Step 5: Behavior",
      step2Item5Desc: "Describe how your component behaves and interacts with users. Document tap/press actions, keyboard interactions, gesture support, and internal state changes. Specify responsive behavior for different screen sizes and breakpoints. Define accessibility requirements including screen reader support and semantic labels.",
      step2Item6Title: "Step 6: Implementation",
      step2Item6Desc: "Specify implementation details including file location following your project structure (e.g., lib/core/design_system/components/buttons/). Indicate if the component needs Riverpod providers for state management, describe the provider structure, and list any existing providers it consumes. Add validation rules if your component handles user input.",
      step2Item7Title: "Step 7: Review",
      step2Item7Desc: "Review your complete specification before exporting. See a summary of all entered information, check completion status for each step, and view the validation checklist. Once all required fields are complete, export your markdown specification ready for AI-assisted implementation.",
      step3Title: "3. Real-Time Preview",
      step3Desc: "Toggle the markdown preview to see your documentation generated in real-time. The preview updates as you fill out the form.",
      step4Title: "4. Export Your Documentation",
      step4Desc: "Once all required fields are complete, export your specification as a markdown file ready for AI-assisted development.",
      features: "Key Features",
      feature1Title: "Quick Start Mode",
      feature1Desc: "Toggle Quick Start to show only essential fields, or disable it to access all advanced options.",
      feature2Title: "Auto-Save",
      feature2Desc: "Your work is automatically saved in your browser. Never lose progress, even if you close the tab.",
      feature3Title: "Design System Integration",
      feature3Desc: "Built-in support for design tokens including colors, typography, dimensions, and animations.",
      feature4Title: "Multi-Language Support",
      feature4Desc: "Switch between English and Spanish at any time using the language switcher.",
      tips: "Pro Tips",
      tip1Title: "Use PascalCase for component names",
      tip1Desc: "Follow Flutter conventions: TobatiPrimaryButton, CustomTextField, etc.",
      tip2Title: "Be specific with descriptions",
      tip2Desc: "Clear descriptions help AI agents understand the component's purpose and implementation requirements.",
      tip3Title: "Include visual references",
      tip3Desc: "Provide Figma links or detailed visual descriptions to ensure accurate implementation.",
      tip4Title: "Define complete APIs",
      tip4Desc: "Use proper Dart syntax with types, required parameters, and default values.",
      aiOptimized: "AI-Optimized Output",
      aiOptimizedDesc: "The generated markdown files are specifically formatted for AI agents working with Flutter/Dart codebases. Each specification includes:",
      aiItem1: "Complete component requirements and constraints",
      aiItem2: "Design system token references",
      aiItem3: "Implementation guidelines and file structure",
      aiItem4: "Validation checklist and deliverables",
      needHelp: "Need Help?",
      needHelpDesc: "If you have questions or need assistance, feel free to reach out or check the inline hints throughout the form.",
    },
  },
  es: {
    // Authentication
    auth: {
      error: "Error",
      success: "Éxito",
      loginSuccess: "Sesión iniciada correctamente",
      loginError: "Error al iniciar sesión. Verifica tus credenciales.",
      signupSuccess: "Cuenta creada correctamente",
      signupError: "Error al crear la cuenta",
      networkError: "Error de red. Por favor, inténtalo de nuevo.",
    },
    // Login Screen
    login: {
      title: "Generador de Componentes Flutter",
      subtitle: "Optimiza la documentación de tus componentes",
      welcomeBack: "Bienvenido de nuevo",
      signInPrompt: "Inicia sesión para comenzar a crear especificaciones de componentes",
      email: "Correo electrónico",
      password: "Contraseña",
      signIn: "Iniciar sesión",
      signingIn: "Iniciando sesión...",
      noAccount: "¿No tienes una cuenta?",
      signUp: "Registrarse",
      supabaseReady: "Listo para integración con Supabase",
      authPrepared: "Lógica de autenticación preparada en login-screen.tsx",
      whyUse: "¿Por qué usar esta herramienta?",
      feature1Title: "Interfaz de Formulario Multi-paso",
      feature1Desc: "Divide especificaciones complejas de componentes en pasos manejables",
      feature2Title: "Integración con Sistema de Diseño",
      feature2Desc: "Tokens predefinidos para colores, tipografía y dimensiones de tu sistema de diseño",
      feature3Title: "Vista Previa de Markdown en Vivo",
      feature3Desc: "Ve tu especificación de componente generada en tiempo real mientras completas el formulario",
      feature4Title: "Exportar y Autoguardado",
      feature4Desc: "Exporta como archivo markdown y nunca pierdas tu progreso con el autoguardado",
      perfectFor: "Perfecto para:",
      perfectForDesc:
        "Desarrolladores Flutter, mantenedores de sistemas de diseño y equipos que desean estandarizar la documentación de componentes para desarrollo asistido por IA.",
      viewDocs: "Ver Documentación",
    },
    // Component Form
    form: {
      stepOf: "Paso {current} de {total}",
      quickStart: "Inicio Rápido",
      resetStep: "Reiniciar Paso",
      previous: "Anterior",
      next: "Siguiente",
      resetStepTitle: "¿Reiniciar este paso?",
      resetStepDesc: "Esto borrará todos los datos del paso actual. Esta acción no se puede deshacer.",
      cancel: "Cancelar",
      reset: "Reiniciar",
    },
    // Steps
    steps: {
      basicInfo: "Información Básica",
      variantsStates: "Variantes y Estados",
      designSpecs: "Especificaciones de Diseño",
      componentAPI: "API del Componente",
      behavior: "Comportamiento",
      implementation: "Implementación",
      review: "Revisar",
    },
    // Basic Info Step
    basicInfo: {
      componentName: "Nombre del Componente",
      componentNamePlaceholder: "ej., TobatiPrimaryButton",
      componentNameHint: "Usa PascalCase para nombres de componentes",
      componentType: "Tipo de Componente",
      description: "Descripción",
      descriptionPlaceholder: "Breve descripción de qué hace este componente y dónde se usa...",
      visualReference: "Referencia Visual",
      visualReferencePlaceholder: "Describe el diseño del componente, jerarquía visual y elementos visuales clave...",
      visualReferenceHint: "Proporciona enlace de Figma o descripción detallada",
      required: "*",
    },
    // Variants & States Step
    variantsStates: {
      selectVariants: "Selecciona todas las variantes que este componente necesita soportar",
      quickStartNote:
        "El modo Inicio Rápido muestra variantes esenciales. Desactiva Inicio Rápido para ver todas las opciones.",
    },
    // Design Specs Step
    designSpecs: {
      colors: "Colores",
      background: "Fondo",
      text: "Texto",
      border: "Borde",
      icons: "Iconos",
      selectColor: "Seleccionar color",
      typography: "Tipografía",
      primaryText: "Texto Principal",
      secondaryText: "Texto Secundario",
      labels: "Etiquetas",
      selectStyle: "Seleccionar estilo",
      dimensions: "Dimensiones y Espaciado",
      padding: "Relleno",
      borderRadius: "Radio del Borde",
      selectSize: "Seleccionar tamaño",
    },
    // Component API Step
    componentAPI: {
      title: "Props/Parámetros del Componente",
      description: "Define la API del componente usando sintaxis Dart",
      tips: "Consejos:",
      tip1: "Usa required para parámetros obligatorios",
      tip2: "Agrega ? para parámetros opcionales/nulos",
      tip3: "Proporciona valores predeterminados cuando sea apropiado",
      tip4: "Usa tipado Dart adecuado para todos los parámetros",
    },
    // Behavior Step
    behavior: {
      behaviorTitle: "Comportamiento e Interacciones",
      behaviorPlaceholder:
        "Describe cómo se comporta el componente: acciones de toque/presión, respuesta a entrada del usuario, estado interno, lógica de validación, interacciones de teclado, soporte de gestos...",
      responsiveTitle: "Comportamiento Responsivo",
      responsivePlaceholder:
        "¿El tamaño se adapta al tamaño de pantalla? ¿Diferentes diseños para puntos de interrupción? ¿Manejo de desbordamiento de texto?",
      accessibilityTitle: "Requisitos de Accesibilidad",
    },
    // Implementation Step
    implementation: {
      fileLocation: "Ubicación del Archivo",
      fileLocationPlaceholder: "lib/core/design_system/components/[categoría]/[nombre_componente].dart",
      fileLocationHint: "Categoría: buttons, inputs, cards, navigation, overlays, feedback, etc.",
      needsProvider: "¿Necesita Proveedor Riverpod?",
      providerStructure: "Estructura del Proveedor",
      providerStructurePlaceholder: "Describe la estructura del proveedor...",
      consumesProviders: "Consume Proveedores Existentes",
      consumesProvidersPlaceholder: "Lista los proveedores que este componente consume...",
      validationTitle: "Validación (si aplica)",
      validationRules: "Reglas de Validación",
      validationRulesPlaceholder: "ej., Requerido, longitud mínima, formato de correo...",
      validationTiming: "Cuándo Ocurre la Validación",
      validationTimingPlaceholder: "onChange, onBlur, onSubmit...",
      additionalNotes: "Notas Adicionales",
      additionalNotesPlaceholder: "Cualquier contexto adicional, casos extremos o requisitos especiales...",
    },
    // Review Step
    review: {
      title: "Revisa tu Componente",
      description: "Verifica todas las especificaciones antes de exportar el archivo markdown",
      validationChecklist: "Lista de Verificación",
      percentComplete: "% Completo",
      componentSummary: "Resumen del Componente",
      componentName: "Nombre del Componente:",
      type: "Tipo:",
      variants: "Variantes:",
      variantsSelected: "seleccionadas",
      fileLocation: "Ubicación del Archivo:",
      notSet: "No establecido",
      exportButton: "Exportar Markdown",
      completeStepsToExport: "Completa todos los pasos para exportar",
      allStepsComplete: "¡Todos los pasos completos! Listo para exportar.",
      incompleteSteps: "Pasos incompletos:",
    },
    // Markdown Preview
    preview: {
      title: "Vista Previa de Markdown",
      copy: "Copiar",
      copied: "Copiado",
      copyToClipboard: "Copiar al portapapeles",
      completeStepsToCopy: "Completa todos los pasos para copiar",
      completeStepsWarning: "Completa todos los pasos requeridos para habilitar copiar y exportar",
      placeholder: "Completa el formulario para ver la vista previa del markdown...",
    },
    // Signup Screen
    signup: {
      title: "Generador de Componentes Flutter",
      subtitle: "Optimiza la documentación de tus componentes",
      createAccount: "Crea tu cuenta",
      signupPrompt: "Comienza a documentar tus componentes Flutter hoy",
      name: "Nombre Completo",
      namePlaceholder: "Juan Pérez",
      email: "Correo electrónico",
      password: "Contraseña",
      passwordHint: "Debe tener al menos 6 caracteres",
      confirmPassword: "Confirmar Contraseña",
      createAccountButton: "Crear Cuenta",
      creatingAccount: "Creando cuenta...",
      haveAccount: "¿Ya tienes una cuenta?",
      signIn: "Iniciar sesión",
      passwordMismatch: "Las contraseñas no coinciden",
      passwordTooShort: "La contraseña debe tener al menos 6 caracteres",
      supabaseReady: "Listo para integración con Supabase",
      authPrepared: "Lógica de autenticación preparada en signup-screen.tsx",
      getStarted: "Comienza en minutos",
      benefit1Title: "Configuración Ultrarrápida",
      benefit1Desc: "Crea tu cuenta en segundos y comienza a documentar componentes de inmediato.",
      benefit2Title: "Colaboración en Equipo",
      benefit2Desc: "Comparte y colabora en la documentación de componentes con tu equipo.",
      benefit3Title: "Documentación Lista para IA",
      benefit3Desc: "Genera archivos markdown optimizados para desarrollo Flutter asistido por IA.",
      freeForever: "Diseñado para Desarrolladores:",
      freeForeverDesc: "Optimiza tu flujo de trabajo con plantillas inteligentes y generación de markdown en tiempo real.",
    },
    // Documentation Page
    docs: {
      title: "Documentación",
      subtitle: "Aprende a usar el Generador de Componentes Flutter",
      backToHome: "Volver al Inicio",
      gettingStarted: "Primeros Pasos",
      gettingStartedDesc: "Aprende los conceptos básicos de crear especificaciones de componentes",
      howToUse: "Cómo Usar",
      step1Title: "1. Crea una Cuenta",
      step1Desc: "Regístrate para guardar tu trabajo y acceder a todas las funciones. Tu progreso se guarda automáticamente mientras trabajas.",
      step2Title: "2. Completa el Formulario Multi-Paso",
      step2Desc: "Nuestro intuitivo formulario de 7 pasos te guía a través de documentar cada aspecto de tu componente Flutter. Cada paso se enfoca en un aspecto específico de tu componente:",
      step2Item1Title: "Paso 1: Información Básica",
      step2Item1Desc: "Define la base de tu componente. Ingresa el nombre del componente (ej., TobatiPrimaryButton), selecciona su tipo de categorías predefinidas (Button, Input, Card, etc.), proporciona una descripción clara de qué hace, y agrega referencias visuales como enlaces de Figma o descripciones detalladas del diseño.",
      step2Item2Title: "Paso 2: Variantes y Estados",
      step2Item2Desc: "Selecciona todas las variantes que tu componente necesita soportar. Elige entre estados como Default, Hover, Active, Disabled, Loading, Error y Success. Usa el modo Inicio Rápido para ver solo variantes esenciales, o desactívalo para acceder a la lista completa de estados posibles.",
      step2Item3Title: "Paso 3: Especificaciones de Diseño",
      step2Item3Desc: "Define el diseño visual de tu componente usando tokens del sistema de diseño. Especifica colores para fondo, texto, bordes e iconos. Elige estilos de tipografía para texto principal, secundario y etiquetas. Establece dimensiones incluyendo altura, ancho, padding, margen, radio del borde y tamaños de iconos. Agrega detalles de animación si es necesario.",
      step2Item4Title: "Paso 4: API del Componente",
      step2Item4Desc: "Define los props y parámetros del componente usando sintaxis Dart. Incluye definiciones de tipos, marca parámetros requeridos con 'required', usa '?' para parámetros opcionales/nulos, y proporciona valores predeterminados cuando sea apropiado. Esto se convierte en la interfaz pública de tu componente.",
      step2Item5Title: "Paso 5: Comportamiento",
      step2Item5Desc: "Describe cómo se comporta e interactúa tu componente con los usuarios. Documenta acciones de toque/presión, interacciones de teclado, soporte de gestos y cambios de estado interno. Especifica el comportamiento responsivo para diferentes tamaños de pantalla y puntos de interrupción. Define requisitos de accesibilidad incluyendo soporte para lectores de pantalla y etiquetas semánticas.",
      step2Item6Title: "Paso 6: Implementación",
      step2Item6Desc: "Especifica detalles de implementación incluyendo la ubicación del archivo siguiendo la estructura de tu proyecto (ej., lib/core/design_system/components/buttons/). Indica si el componente necesita proveedores Riverpod para manejo de estado, describe la estructura del proveedor, y lista cualquier proveedor existente que consume. Agrega reglas de validación si tu componente maneja entrada del usuario.",
      step2Item7Title: "Paso 7: Revisar",
      step2Item7Desc: "Revisa tu especificación completa antes de exportar. Ve un resumen de toda la información ingresada, verifica el estado de completitud de cada paso, y visualiza la lista de verificación de validación. Una vez que todos los campos requeridos estén completos, exporta tu especificación markdown lista para implementación asistida por IA.",
      step3Title: "3. Vista Previa en Tiempo Real",
      step3Desc: "Activa la vista previa de markdown para ver tu documentación generada en tiempo real. La vista previa se actualiza mientras completas el formulario.",
      step4Title: "4. Exporta tu Documentación",
      step4Desc: "Una vez que todos los campos requeridos estén completos, exporta tu especificación como un archivo markdown listo para desarrollo asistido por IA.",
      features: "Características Clave",
      feature1Title: "Modo Inicio Rápido",
      feature1Desc: "Activa Inicio Rápido para mostrar solo campos esenciales, o desactívalo para acceder a todas las opciones avanzadas.",
      feature2Title: "Autoguardado",
      feature2Desc: "Tu trabajo se guarda automáticamente en tu navegador. Nunca pierdas el progreso, incluso si cierras la pestaña.",
      feature3Title: "Integración con Sistema de Diseño",
      feature3Desc: "Soporte integrado para tokens de diseño incluyendo colores, tipografía, dimensiones y animaciones.",
      feature4Title: "Soporte Multi-Idioma",
      feature4Desc: "Cambia entre inglés y español en cualquier momento usando el selector de idioma.",
      tips: "Consejos Profesionales",
      tip1Title: "Usa PascalCase para nombres de componentes",
      tip1Desc: "Sigue las convenciones de Flutter: TobatiPrimaryButton, CustomTextField, etc.",
      tip2Title: "Sé específico con las descripciones",
      tip2Desc: "Descripciones claras ayudan a los agentes IA a comprender el propósito del componente y requisitos de implementación.",
      tip3Title: "Incluye referencias visuales",
      tip3Desc: "Proporciona enlaces de Figma o descripciones visuales detalladas para asegurar una implementación precisa.",
      tip4Title: "Define APIs completas",
      tip4Desc: "Usa sintaxis Dart adecuada con tipos, parámetros requeridos y valores predeterminados.",
      aiOptimized: "Salida Optimizada para IA",
      aiOptimizedDesc: "Los archivos markdown generados están específicamente formateados para agentes IA trabajando con bases de código Flutter/Dart. Cada especificación incluye:",
      aiItem1: "Requisitos y restricciones completas del componente",
      aiItem2: "Referencias a tokens del sistema de diseño",
      aiItem3: "Directrices de implementación y estructura de archivos",
      aiItem4: "Lista de verificación de validación y entregables",
      needHelp: "¿Necesitas Ayuda?",
      needHelpDesc: "Si tienes preguntas o necesitas asistencia, no dudes en comunicarte o consultar las sugerencias en línea a lo largo del formulario.",
    },
  },
} as const

export function useTranslation(lang: Language) {
  return translations[lang]
}
